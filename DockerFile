# Stage 1: Build
FROM rust:1.78 as builder

# Set the working directory
WORKDIR /usr/src/brute-http

# Copy only the necessary files to cache dependencies
COPY brute-http/Cargo.toml brute-http/Cargo.lock ./

# Create a dummy file to cache dependencies
RUN mkdir src && echo "fn main() {}" > src/main.rs

# Fetch dependencies
RUN cargo build --release
RUN rm -f target/release/deps/brute*

# Copy the rest of the source code
COPY brute-http/ ./
COPY migrations ./migrations

# Build the application in debug mode for faster builds
RUN cargo build

# Stage 2: Development
FROM rust:1.78

# Set the working directory
WORKDIR /usr/src/brute-http

# Install necessary development tools (optional)
RUN apt-get update && \
    apt-get install -y \
    libssl-dev libpq-dev pkg-config ca-certificates \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy the source code and migrations from the build stage
COPY --from=builder /usr/src/brute-http /usr/src/brute-http

# Set environment variables
ENV DATABASE_URL=postgresql://postgres:{password}@{host}/{database}
ENV BEARER_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ENV IPINFO_TOKEN=xxxxxxxxxxxxxx
ENV RUST_LOG=trace
ENV RUST_LOG_STYLE=always
ENV RATE_LIMIT=5
ENV RATE_LIMIT_DURATION=1
ENV LISTEN_ADDRESS=0.0.0.0:3000
ENV RUNNING_IN_DOCKER=true

EXPOSE 3000

# Define the command to run your application in development mode
CMD ["cargo", "run", "--release"]

